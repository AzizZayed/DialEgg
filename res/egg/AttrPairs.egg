(sort Attr)
(sort AttrDict (Map String Attr))
(sort AttrVec (Vec Attr))
(datatype AttrPair (NamedAttr String Attr))

(function IntegerAttr (i64) Attr)
(function FloatAttr (f64) Attr)
(function ArrayAttr (AttrVec) Attr)
(function DictionaryAttr (AttrDict) Attr)

(datatype Expr
    (Num AttrPair AttrPair)
    (Add Expr Expr)
    (Mul Expr Expr)
)

(let e1 (Num (NamedAttr "int_value" (IntegerAttr 5)) (NamedAttr "float_value" (FloatAttr 5.0))))
(let e2 (Num (NamedAttr "int_value" (IntegerAttr 6)) (NamedAttr "float_value" (FloatAttr 6.0))))
(let e3 (Add e1 e2))
(let e4 (Mul e1 e2))

; constant folding
(rewrite
	(Add 
    	(Num (NamedAttr "int_value" (IntegerAttr ?x1)) (NamedAttr "float_value" (FloatAttr ?y1)))
     	(Num (NamedAttr "int_value" (IntegerAttr ?x2)) (NamedAttr "float_value" (FloatAttr ?y2)))
    )
 	(Num (NamedAttr "int_value" (IntegerAttr (+ ?x1 ?x2))) (NamedAttr "float_value" (FloatAttr (+ ?y1 ?y2))))
)

(rewrite
	(Mul 
    	(Num (NamedAttr "int_value" (IntegerAttr ?x1)) (NamedAttr "float_value" (FloatAttr ?y1)))
     	(Num (NamedAttr "int_value" (IntegerAttr ?x2)) (NamedAttr "float_value" (FloatAttr ?y2)))
    )
 	(Num (NamedAttr "int_value" (IntegerAttr (* ?x1 ?x2))) (NamedAttr "float_value" (FloatAttr (* ?y1 ?y2))))
)


(run 10)