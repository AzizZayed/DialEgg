(sort IntVec (Vec i64))
(sort FloatVec (Vec f64))

;; Types
(sort Type)
(sort TypeVec (Vec Type))

;; Attrs
(sort Attr)
(sort AttrDict (Map String Attr))
(sort AttrVec (Vec Attr))
(datatype AttrPair (NamedAttr String Attr))

;; Op
;; Usage:
;; (<op_variant> <operand1> <operand2> ... <operandN> <attr1> <attr2> ... <attrM> <block> <type>)
(datatype Op 
    (Value i64 Type)  ; MLIR value, this is used to represent the result of an operation when the operation is unknown/unsupported
    (NoOp)
)
(sort Block (Vec Op))

;;;; builtin dialect ;;;;

(function F16 () Type)
(function F32 () Type)
(function F64 () Type)
(function F80 () Type)
(function F128 () Type)
(function I1 () Type)
(function I4 () Type)
(function I8 () Type)
(function I16 () Type)
(function I32 () Type)
(function I64 () Type)
(function Int (i64) Type)
(function SInt (i64) Type)
(function UInt (i64) Type)
(function OtherInt (String) Type)
(function Index () Type)
(function None () Type)
(function Complex (Type) Type)
(function Tuple (TypeVec) Type)

(function RankedTensor (IntVec Type) Type)
(function UnrankedTensor (Type) Type)

(function OtherType (String String) Type)

; Dynamic RankedTensor type
; (datatype Dimension
;     (Dyn)
;     (D i64)
; )
; (sort DimVec (Vec Dimension))
; (function DynRankedTensor (DimVec Type) Type)

(function NoAttr () Attr)
(function IntegerAttr (i64 Type) Attr)
(function FloatAttr (f64 Type) Attr)
(function StringAttr (String) Attr)
(function UnitAttr () Attr)
(function TypeAttr (Type) Attr)

(function ArrayAttr (AttrVec) Attr)
(function DenseIntArrayAttr (i64 IntVec Type) Attr)
(function DenseFloatArrayAttr (f64 FloatVec Type) Attr)
(function DenseIntElementsAttr (FloatVec Type) Attr)
(function DenseFPElementsAttr (FloatVec Type) Attr)
(function SymbolRefAttr (String) Attr)

(function OtherAttr (String String) Attr) ; (<attr> <type-name>)

; DenseResourceElementsAttr
; DenseStringElementsAttr
; DictionaryAttr
; IntegerSetAttr
; OpaqueAttr
; SparseElementsAttr
; SymbolRefAttr
; StridedLayoutAttr

;;;; linalg dialect ;;;;
(function linalg_matmul (Op Op Op Type) Op)

;;;; tensor dialect ;;;;
(function tensor_empty (Type) Op)

;; OPS HERE ;;

;; RULES HERE ;;
; Analysis for cost of linalg_matmul
(function nrows (Op) i64)
(function ncols (Op) i64)

(rule ((= ?m (tensor_empty (RankedTensor ?dims ?t))) (> (vec-length ?dims) 1))
    ((set (nrows ?m) (vec-get ?dims 0))
    (set (ncols ?m) (vec-get ?dims 1))))

(rule ((= ?m (linalg_matmul ?x ?y ?o (RankedTensor ?d ?t)))
        (= ?a (nrows ?x))
        (= ?b (ncols ?x))
        (= ?c (ncols ?y)))
    ((set (nrows ?m) ?a)
     (set (ncols ?m) ?c)
     (unstable-cost (linalg_matmul ?x ?y ?o (RankedTensor ?d ?t)) (* (* ?a ?b) ?c))))

(run 10000)

(rule
    ((= ?lhs (linalg_matmul (linalg_matmul ?x ?y ?o0 (RankedTensor ?d0 ?t)) ?z ?o1 (RankedTensor ?d1 ?t))))
    ((let out_t (RankedTensor (vec-of (nrows ?y) (ncols ?z)) ?t))
     (union ?lhs (linalg_matmul ?x (linalg_matmul ?y ?z (tensor_empty out_t) out_t) ?o1 (RankedTensor ?d1 ?t))))
)